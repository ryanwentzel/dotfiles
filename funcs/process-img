#!/bin/sh

local LG_SIZE="2560x1440"
local MD_SIZE="1280x720"
local SM_SIZE="854x480"

function rwimg-resize () {
    local input=$1
    local output=$2
    local size=$3
    local quality=${4:-100}
    magick "${input}" -resize "$size^" -gravity center -extent $size^ -quality $quality $output
}

function img-grow () {
    local size=${2}
    local quality=${3:-90}
    local name=${1%.*}
    local output_name="$name-lg.jpg"

    magick "${1}" -resize "$size^" -gravity center -extent $size^ -quality $quality $output_name
}

function newsletter-img () {
    local quality=${2:-70}
    local name=${1%.*}
    local output_name="$name-newsletter.webp"
    local dist_dir="dist"

    mkdir -p $dist_dir
    convert-webp-1280 "${1}" "$dist_dir/$output_name" $quality
    echo "created: $dist_dir/$output_name"
}

# Convert an image to webp format
function rwebp () {
    local input=$1
    if [ -z "$input" ]; then
        echo "Usage: rwebp <input> [<quality>]"
        return 1
    fi

    local name=${1%.*}
    local quality=${2:-75}
    local output=${3:-name.webp}

    cwebp -quiet -q $quality $input -o $output
}

function rwimg () {
    local input_file=$1
    local base_name=$(basename ${input_file})
    local name=${base_name%.*}
    local dist_dir="dist"

    mkdir -p $dist_dir

    # Create large image
    local tmp="$dist_dir/$name-lg.tmp"
    local lg="$dist_dir/$name-lg.webp"
    rwimg-resize $input_file $tmp $LG_SIZE
    imgopt "${tmp}"
    rwebp "${tmp}" 75 "${lg}"
    rm "${tmp}"

    # Create medium image
    local md="$dist_dir/$name-md.webp"
    tmp="$dist_dir/$name-md.tmp"
    rwimg-resize $input_file $tmp $MD_SIZE
    imgopt "${tmp}"
    rwebp "${tmp}" 80 "${md}"
    rm "${tmp}"

    # Create small image
    local sm="$dist_dir/$name-sm.webp"
    tmp="$dist_dir/$name-sm.tmp"
    rwimg-resize $input_file $tmp $SM_SIZE
    imgopt "${tmp}"
    rwebp "${tmp}" 85 "${sm}"
    rm "${tmp}"

    echo "lg: ${lg}"
    echo "md: ${md}"
    echo "sm: ${sm}"
}

function rwimages {
    local dir="${1:-.}"  # Default to current directory if no argument is provided
    for file in "$dir"/*; do
        if [[ -f "$file" ]]; then
            echo "processing $file"
            rwimg $file
            echo "--------------------------------"
        fi
    done
}

function rwphoto-l () {
    local base_name=$(basename ${1})
    local quality=${2:-85}
    local name=${base_name%.*}
    local full="$name.webp"
    local thumb="$name-thumb.webp"
    local dist_dir="dist"

    local output_full="$dist_dir/$full"
    local output_thumb="$dist_dir/$thumb"

    mkdir -p $dist_dir

    echo "creating ${output_full}"
    magick "${1}" -resize "2160x1440>" -quality $quality "$output_full"

    echo "creating ${output_thumb}"
    magick "${1}" -resize 1000x1000^ -gravity center -extent 1000x1000 -define :webp:lossless=false -define :webp:image-hint=photo -quality 95 "$output_thumb"
}

function rwphoto-p () {
    local base_name=$(basename ${1})
    local quality=${2:-85}
    local name=${base_name%.*}
    local full="$name.webp"
    local thumb="$name-thumb.webp"
    local dist_dir="dist"

    local output_full="$dist_dir/$full"
    local output_thumb="$dist_dir/$thumb"

    mkdir -p $dist_dir

    echo "creating ${output_full}"
    magick "${1}" -resize "648x972>" -define :webp:lossless=false -define :webp:image-hint=photo -format webp -quality $quality "$output_full"

    echo "creating ${output_thumb}"
    magick "${1}" -resize 1000x1000^ -gravity center -extent 1000x1000 -define :webp:lossless=false -define :webp:image-hint=photo -quality 85 "$output_thumb"
}

function rwphoto-sq () {
    local base_name=$(basename ${1})
    local name=${base_name%.*}
    local thumb="$name-thumb.webp"
    local dist_dir="dist"

    local output_full="$dist_dir/$base_name"
    local output_thumb="$dist_dir/$thumb"

    mkdir -p $dist_dir

    echo "creating ${output_full}"
    magick "${1}" -resize "600x600" -quality 85 "$output_full"

    echo "creating ${output_thumb}"
    magick "${1}" -resize 500x500^ -gravity center -extent 500x500 -define :webp:lossless=false -define :webp:image-hint=photo -quality 90 "$output_thumb"
}

function sq-1000 () {
    local base_name=$(basename ${1})
    local quality=${2:-85}
    local name=${base_name%.*}
    local thumb="$name-thumb.webp"
    local dist_dir="dist"
    local output_thumb="$dist_dir/$thumb"

    mkdir -p $dist_dir
    echo "creating ${output_thumb}"
    magick "${1}" -resize 1000x1000^ -gravity center -extent 1000x1000 -define :webp:lossless=false -define :webp:image-hint=photo -quality $quality "$output_thumb"

}

function square-thumb () {
    local name=${1%.jpg}
    local thumb="$name-thumb.webp"

    magick "${1}" -resize 500x500^ -gravity center -extent 500x500 -define :webp:lossless=false -define :webp:image-hint=photo -quality 85 "$thumb"
 
}